Description: >
  This is a example of deployment using cloudformation.

Parameters:

  VPC:
    Description: The VPC that the ECS cluster is deployed to
    Type: AWS::EC2::VPC::Id

  Cluster:
    Description: Please provide the ECS Cluster name that this service should run on
    Type: String

  DesiredCount:
    Description: How many instances of this task should we run across our cluster?
    Type: Number
    Default: 2

  Listener:
    Description: The Application Load Balancer listener to register with
    Type: String

  ServiceRole:
    Description: The IAM Role enabling self registration
    Type: String

  ContainerTaskName:
    Description: Container name for LoadBalancers
    Type: String

  ContainerPort:
    Description: Container port for task definition
    Type: Number

  TargetGroupName:
    Description: Se envia el nombre del Target Group
    Type: String

  TaskRoleName:
    Description: Se envia el nombre del rol
    Type: String

  TaskDefinitionFamily:
    Description: Nombre de la Familia de Task Definition
    Type: String

  HealthCheckUri:
    Description: URI used to check if service is running
    Type: String

  ContainerImage:
    Description: ARN of the Docker image in ECR to be used
    Type: String

#  ConfigServerUrl:
#    Description: Url of the Config Server used
#    Type: String

#  ConfigServerUsername:
#    Description: Username of the Basic Authentication method for Config Server
#    Type: String

#  ConfigServerPassword:
#    Description: Password of the Basic Authentication method for Config Server
#    Type: String

#  ApplicationName:
#    Description: Name of the Application used for Config Server
#    Type: String

#  SpringEnvProfile:
#    Description: Environment used for Config Server
#    Type: String

  MemoryAccount:
    Description: Number of MiB of memory reserved
    Type: Number
    Default: 250

  MemoryResAmount:
    Description: Memory Reservation amount for task-container
    Type: Number
    Default: 250

  CpuAmount:
    Description: Number CPU units
    Type: Number
    Default: 250

Resources:

  ECSService:
    Type: AWS::ECS::Service
    DependsOn: ListenerRule
    Properties:
      Cluster: !Ref Cluster
      Role: !Ref ServiceRole
      DesiredCount: !Ref DesiredCount
      HealthCheckGracePeriodSeconds: 120
      TaskDefinition: !Ref TaskDefinition
      LoadBalancers:
        - ContainerName: !Ref ContainerTaskName
          ContainerPort: !Ref ContainerPort
          TargetGroupArn: !Ref TargetGroup

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub ${TaskDefinitionFamily}
      ContainerDefinitions:
        - Name: !Ref ContainerTaskName
          Essential: true
          Image: !Ref ContainerImage
          Cpu: !Ref CpuAmount
          Memory: !Ref MemoryAccount
          MemoryReservation: !Ref MemoryResAmount
          PortMappings:
            - ContainerPort: !Ref ContainerPort
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref AWS::StackName
              awslogs-region: !Ref AWS::Region
#          Environment:
#            - Name: spring.cloud.config.username
#              Value: !Ref ConfigServerUsername
#            - Name: spring.cloud.config.password
#              Value: !Ref ConfigServerPassword
#            - Name: spring.cloud.config.uri
#              Value: !Ref ConfigServerUrl
#            - Name: spring.application.name
#              Value: !Ref ApplicationName
#            - Name: spring.profiles.active
#              Value: !Ref SpringEnvProfile
          Ulimits:
            - Name: nofile
              HardLimit: 100000
              SoftLimit: 100000
      TaskRoleArn: !Ref TaskRole

  CloudWatchLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Ref AWS::StackName
      RetentionInDays: 365

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub ${TargetGroupName}
      VpcId: !Ref VPC
      Port: !Ref ContainerPort
      Protocol: HTTP
      Matcher:
        HttpCode: 200-299
      HealthCheckIntervalSeconds: 60
      HealthCheckPath: !Ref HealthCheckUri
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 40
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 10

  ListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: !Ref Listener
      Priority: 7
      Conditions:
        - Field: path-pattern
          Values:
            - /patterns-designs/*
      Actions:
        - TargetGroupArn: !Ref TargetGroup
          Type: forward
  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${TaskRoleName}
      Path: /
      AssumeRolePolicyDocument: |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::573584040050:user/Washo"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        }
      Policies:
        - PolicyName: AmazonS3ReadOnlyAccess
          PolicyDocument:
            {
              "Version": "2012-10-17",
              "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "s3:Get*",
                  "s3:List*"
                ],
                "Resource": "*"
              }
              ]
            }
